// Code generated by mockery v2.36.0. DO NOT EDIT.

package mock

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	entity "github.com/vekaputra/tiger-kittens/internal/repository/entity"
)

// EmailServiceProvider is an autogenerated mock type for the EmailServiceProvider type
type EmailServiceProvider struct {
	mock.Mock
}

// SendSightingEmail provides a mock function with given fields: ctx, payload
func (_m *EmailServiceProvider) SendSightingEmail(ctx context.Context, payload entity.TigerSighting) error {
	ret := _m.Called(ctx, payload)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.TigerSighting) error); ok {
		r0 = rf(ctx, payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEmailServiceProvider creates a new instance of EmailServiceProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmailServiceProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmailServiceProvider {
	mock := &EmailServiceProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
